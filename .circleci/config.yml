version: 2
jobs:

  build_code_staging:
    docker:
      - image: circleci/node:10

    working_directory: ~/gov-website
    steps:
      - checkout

      - restore_cache:
          keys:
              - v1-dependencies-{{ checksum "package.json" }}
              - v1-dependencies-
      - run:
          name: npm install
          command: npm i

      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
              - node_modules
      - run:
          name: react build
          command: npm run build
      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
              - build


  delete_code_staging:
    machine:
      enabled: true

    steps:
      - add_ssh_keys:
            fingerprints:
              - $SSH_HOST_FINGERPRINT_STAGING

      - run:
          name: SSH Remove Frontend
          command: |
              ssh $SSH_USER_STAGING@$SSH_HOST_STAGING bash -c '
                rm -rf /home/ubuntu/staging/dapp'


  deploy_code_staging:
    docker:
      - image: circleci/node:10
    working_directory: ~/gov-website
    user: root
    steps:
      - add_ssh_keys:
            fingerprints:
              - $SSH_HOST_FINGERPRINT_STAGING

      - restore_cache:
                key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: SSH SCP on Staging for copy build
          command: scp -o StrictHostKeyChecking=no -r ./build/ $SSH_USER_STAGING@$SSH_HOST_STAGING:/home/ubuntu/staging/dapp




  build_code_master:
    docker:
      - image: circleci/node:10

    working_directory: ~/gov-website
    steps:
      - checkout

      - restore_cache:
          keys:
              - v1-dependencies-{{ checksum "package.json" }}
              - v1-dependencies-
      - run:
          name: npm install
          command: npm i

      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
              - node_modules
      - run:
          name: react build
          command: npm run build
      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
              - build


  delete_code_master:
    machine:
      enabled: true

    steps:
      - add_ssh_keys:
            fingerprints:
              - $SSH_HOST_FINGERPRINT_MASTER

      - run:
          name: SSH Remove Frontend
          command: |
              ssh $SSH_USER_MASTER@$SSH_HOST_MASTER bash -c '
                rm -rf /home/ubuntu/master/dapp'


  deploy_code_master:
    docker:
      - image: circleci/node:10
    working_directory: ~/frontend-project
    user: root
    steps:
      - add_ssh_keys:
            fingerprints:
              - $SSH_HOST_FINGERPRINT_STAGING

      - restore_cache:
                key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: SSH SCP on master for copy build
          command: scp -o StrictHostKeyChecking=no -r ./build/ $SSH_USER_MASTER@$SSH_HOST_MASTER:/home/ubuntu/master/dapp


workflows:
  version: 2
  build_deploy_staging:
     jobs:
      - build_code_staging:
          filters:
            branches:
              only:
                - development
      - delete_code_staging:
          filters:
            branches:
              only:
                - development
          requires:
            - build_code_staging
      - deploy_code_staging:
          filters:
            branches:
              only:
                - development
          requires:
            - delete_code_staging

  build_deploy_master:
     jobs:
      - build_code_master:
          filters:
            branches:
              only:
                - master
      - delete_code_master:
          filters:
            branches:
              only:
                - master
          requires:
            - build_code_master
      - deploy_code_master:
          filters:
            branches:
              only:
                - master
          requires:
            - delete_code_master
